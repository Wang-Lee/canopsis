#!/bin/bash

NAME="mongodb-conf"
VERSION=0.7
RELEASE=0
DESCRIPTION=""
REQUIRES="canohome python canolibs mongodb"

NO_ARCH=true
NO_DIST=true
NO_DISTVERS=true

function pre_install(){
    echo "Pre-install $NAME $VERSION-$RELEASE ..."
	check_code $?
}

function post_install(){
	echo "Post-install $NAME $VERSION-$RELEASE ..."

	launch_cmd 0 service mongodb stop

	rm /tmp/mongodb-*.sock &> /dev/null || true

	launch_cmd 1 service mongodb start

	echo -n "Safe wait (may be long the first time) "

	mongo_ready=false
	while ! $mongo_ready
	do
		echo "show collections" | $PREFIX/bin/mongo canopsis >/dev/null 2>&1

		if [ $? -eq 0 ]
		then
			echo " ready"
			mongo_ready=true
		else
			echo -n "."
			sleep 1
		fi
	done

	while true
	do
		safe_prompt "MongoDB password for admin: " adminpass
		safe_prompt "Confirm password: " confirm

		if [ "$adminpass" == "$confirm" ]
		then
			break
		else
			echo "Passwords doesn't match"
		fi
	done

	safe_prompt "MongoDB common user: " cpsuser "show"

	while true
	do
		safe_prompt "MongoDB password for $cpsuser: " cpspass
		safe_prompt "Confirm password: " confirm

		if [ "$cpspass" == "$confirm" ]
		then
			break
		else
			echo "Passwords doesn't match"
		fi
	done

	echo "  + Create admin user ..."
	launch_cmd 1 $PREFIX/bin/mongo admin --eval "\"db.createUser({user: 'admin', pwd: '$adminpass', roles: ['readWriteAnyDatabase', 'userAdminAnyDatabase', 'dbAdminAnyDatabase']})\""

	echo "  + Create $cpsuser user ..."
	launch_cmd 1 $PREFIX/bin/mongo -u admin -p $adminpass --authenticationDatabase admin canopsis --eval "\"db.createUser({user: '$cpsuser', pwd: '$cpspass', roles: ['dbOwner']})\""

	launch_cmd 0 $PREFIX/bin/initool set $PREFIX/etc/cstorage.conf master userid $cpsuser
	launch_cmd 0 $PREFIX/bin/initool set $PREFIX/etc/cstorage.conf master password $cpspass

	launch_cmd 0 $PREFIX/bin/initool set $PREFIX/etc/storage/storage.conf DATABASE user $cpsuser
	launch_cmd 0 $PREFIX/bin/initool set $PREFIX/etc/storage/storage.conf DATABASE pwd $cpspass

	echo "  + Initialize database"
	launch_cmd 1 schema2db
	launch_cmd 1 python $PREFIX/opt/mongodb/filldb.py init

	launch_cmd 1 service mongodb stop
}

function pre_remove(){
	echo "Pre-remove $NAME $VERSION-$RELEASE ..."
	launch_cmd 0 service mongodb stop
}

function post_remove(){
	echo "Post-remove $NAME $VERSION-$RELEASE ..."
}

function pre_update(){
	echo "Pre-update $NAME $VERSION-$RELEASE ..."
}

function post_update(){
	echo "Post-update $NAME $VERSION-$RELEASE ..."

	launch_cmd 1 service mongodb start

	echo -n "Safe wait (may be long the first time) "

	mongo_user=$($PREFIX/bin/initool get $PREFIX/etc/storage/storage.conf DATABASE user)
	mongo_pass=$($PREFIX/bin/initool get $PREFIX/etc/storage/storage.conf DATABASE pwd)

	mongo_ready=false
	while ! $mongo_ready
	do
		echo "show collections" | $PREFIX/bin/mongo canopsis -u $mongo_user -p $mongo_pass >/dev/null 2>&1

		if [ $? -eq 0 ]
		then
			echo " ready"
			mongo_ready=true
		else
			sleep 1
		fi
	done
	echo "   + Update JSON schemas"

	launch_cmd 1 schema2db

	echo "   + Fix permissions"
	chown -R $HUSER:$HGROUP $PREFIX/etc/schema.d
	check_code $?

	launch_cmd 1 python $PREFIX/opt/mongodb/filldb.py update
	check_code $?
}

function purge(){
	echo "Purge $NAME $VERSION-$RELEASE ..."
	check_code $?
}
